name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    name: üß∞ Checkout & Setup Python
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

  lint:
    name: üßº Linting & Formatting
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install flake8, autoflake & black
        run: pip install flake8 autoflake black

      - name: Run flake8 lint (max line length 120)
        run: flake8 . --max-line-length=120

      - name: Check formatting with autoflake
        run: autoflake --check --recursive .

      - name: Auto-format code with black
        run: black . --line-length 120

  security:
    name: üîê Security Scanning (Bandit + Trivy FS)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit scan
        run: bandit -r .

      - name: Trivy FS scan
        uses: aquasecurity/trivy-action@v1
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          exit-code: 0
          severity: CRITICAL,HIGH

  test:
    name: üß™ Unit Testing & Coverage
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install pytest & coverage
        run: pip install pytest pytest-cov

      - name: Run tests with coverage
        run: pytest --cov=my_app --cov-fail-under=80

  build:
    name: üê≥ Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t app:latest .

  image-scan:
    name: üîé Scan Docker Image (Trivy)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@v1
        with:
          image-ref: app:latest
          format: table
          ignore-unfixed: true
          exit-code: 1
          severity: CRITICAL,HIGH

  push:
    name: üöÄ Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: image-scan
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v4

      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Tag & Push Docker image
        run: |
          docker tag app:latest ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
