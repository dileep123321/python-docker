name: CI Pipeline - main branch only

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository  
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort bandit pip-audit pytest pytest-cov docker

      - name: Auto-format code with black
        run: black .

      - name: Fix imports with isort
        run: isort .

      - name: Lint code with flake8
        run: flake8 . --max-line-length=120 --ignore=F403,F405

      - name: Run Bandit security scan
        run: bandit -r . --severity-level MEDIUM || true

      - name: Run pip-audit dependency scan
        run: pip-audit || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create and use Buildx builder instance
        run: |
          docker buildx create --name mybuilder --driver docker-container --use || docker buildx use mybuilder
          docker buildx inspect --bootstrap

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true

      - name: Run tests with coverage
        env:
          DOCKER_IMAGE: app:latest
        run: pytest --cov=tools --cov-fail-under=80

      - name: Install Trivy
        run: |
          sudo apt-get update && sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/download/v0.67.2/trivy_0.67.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.67.2_Linux-64bit.deb

      - name: Scan Docker image for vulnerabilities
        run: trivy image --scanners vuln --exit-code 0 --severity CRITICAL,HIGH --ignore-unfixed app:latest

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

      - name: Verify Docker login
        run: docker info

      - name: Tag and push Docker image
        run: |
          docker tag app:latest dileep1506/python:latest
          docker push dileep1506/python:latest