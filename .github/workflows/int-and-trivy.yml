name: Full CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install flake8, autoflake & black
        run: |
          python -m pip install --upgrade pip
          pip install flake8 autoflake black

      - name: Auto-fix trailing whitespaces
        run: |
          find . -name "*.py" -exec sed -i 's/[ \t]*$//' {} \;

      - name: Auto-fix unused imports / star imports
        run: |
          find . -name "*.py" -exec autoflake --remove-all-unused-imports --remove-unused-variables --in-place {} \;

      - name: Auto-format all code with black
        run: black . --line-length 120

      - name: Run Flake8 Linter
        run: |
          # Lint production code strictly
          flake8 my_app --max-line-length=120 --exit-zero
          # Lint test files ignoring F403, F405, W293
          flake8 tools/tests scripts/tests --max-line-length=120 --ignore=F403,F405,W293 --exit-zero

  trivy-scan:
    name: Scan Docker Image with Trivy
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t pythonapp:latest .

      - name: Run container test
        run: docker run --rm pythonapp:latest || echo "Container exited (normal if no long-running process)"

      - name: Scan filesystem with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-path: .
          format: table
          exit-code: 0
          ignore-unfixed: true

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: pythonapp:latest
          format: json
          output: trivy-report.json
          exit-code: 0
          ignore-unfixed: true

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

  test:
    name: Unit Testing & Coverage
    runs-on: ubuntu-latest
    needs: trivy-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pytest & coverage
        run: pip install pytest pytest-cov

      - name: Run tests with coverage
        run: pytest --cov=my_app --cov-fail-under=80

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  docker-scan:
    name: Docker Image Critical Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Scan Docker image with Trivy (Critical/High)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: pythonapp:latest
          format: table
          severity: CRITICAL,HIGH
          exit-code: 1

  push:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: docker-scan
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Tag & Push Docker image
        run: |
          docker tag pythonapp:latest ${{ secrets.DOCKERHUB_USERNAME }}/pythonapp:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/pythonapp:latest
